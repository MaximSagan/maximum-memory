{"version":3,"sources":["components/game-setup/styles.ts","constants.ts","components/image-card/styles.ts","components/image-card/ImageCard.tsx","components/game-setup/GameSetup.tsx","components/game-board/styles.ts","helpers.ts","components/game-complete-dialog/GameCompleteDialog.tsx","components/game-board/GameBoard.tsx","styles.ts","Game.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","maxWidth","padding","display","flexDirection","title","marginBottom","spacing","slider","marginTop","radioGroup","justifyContent","label","color","palette","text","primary","cardThemeOption","width","height","startButton","alignSelf","extendedIcon","marginRight","CARD_THEMES","id","DEFAULT_CARD_THEME_ID","frontBackCommonStyles","position","WebkitBackfaceVisibility","backfaceVisibility","borderWidth","borderStyle","borderRadius","shape","perspective","card","doubleClassSpecificity","overflow","textAlign","transition","transformStyle","cardFlipped","transform","cardMatched","animationName","animationDuration","front","borderColor","frontActive","main","back","background","backgroundColor","backgroundSize","cardImage","objectFit","cssProperties","React","memo","src","alt","className","isFaceUp","isActive","isMatched","divProps","classes","classNames","Card","raised","previousSettings","onConfirmGameSettings","randomImageId","useRef","Math","floor","random","useState","cardTheme","cardThemeId","setCardThemeId","numberOfCards","setNumberOfCards","handleThemeChange","useCallback","event","value","handleNumberOfCardsChange","handleConfirmButtonClick","find","component","Typography","variant","Slider","onChange","aria-labelledby","valueLabelDisplay","step","marks","min","max","NUMBER_OF_IMAGES_IN_CARD_THEME","FormControl","FormLabel","RadioGroup","row","aria-label","name","map","FormControlLabel","key","control","Radio","current","Fab","onClick","breakpoints","up","gameCards","flexWrap","marginLeft","imageCard","margin","gameInfo","alignItems","hideCardsCountdown","opacity","hideCardsCountdownFinished","progress","generateNumericArray","length","Array","from","_","k","shuffleArray","array","i","j","numberOfMisses","onConfirm","Dialog","open","disableBackdropClick","DialogTitle","DialogContent","DialogContentText","DialogActions","gameSettings","onEndGame","imageIndices","slice","imageId","displayIndex","initializeGameCards","setGameCards","isFlipAllowed","setIsFlipAllowed","setNumberOfMisses","randomizedHideOrder","useMemo","countDown$","useObservable","interval","pipe","take","intervalIndex","share","secondsUntilHideCards","useObservableState","hideAllCards$","concat","ignoreElements","timer","useSubscription","indexToFlip","cards","index","notifyMatchResult$","Subject","notifyMatchResultDelayed$","delay","isMatch","indices","cardIndex","includes","misses","percentageProgress","filter","Button","size","endIcon","data-testid","gameCard","clickedCardIndex","clickedCard","unmatchedFaceUpCard","next","handleGameCardClick","LinearProgress","placeItems","default","Game","undefined","setGameSettings","isGameActive","setIsGameActive","handleStartGame","settings","handleEndGame","GameSetup","generateClassName","createGenerateClassName","productionPrefix","App","StylesProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b184c106.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n    padding: 20,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  title: {\n    marginBottom: theme.spacing(3),\n  },\n  slider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n  radioGroup: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n  label: {\n    color: theme.palette.text.primary,\n    marginBottom: theme.spacing(3),\n  },\n  cardThemeOption: {\n    width: 90,\n    height: 90,\n  },\n  startButton: {\n    marginTop: theme.spacing(4),\n    alignSelf: \"flex-end\",\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n","export const DEFAULT_NUMBER_OF_CARDS = 12;\nexport const MINIMUM_NUMBER_OF_CARDS = 4;\nexport const NUMBER_OF_IMAGES_IN_CARD_THEME = 20;\nexport const MAXIMUM_NUMBER_OF_CARDS = NUMBER_OF_IMAGES_IN_CARD_THEME * 2;\n\nexport const CARD_THEMES = [\n  {\n    id: \"countries\",\n    title: \"Countries\",\n  },\n  {\n    id: \"heroes\",\n    title: \"Heroes\",\n  },\n];\nexport const DEFAULT_CARD_THEME_ID = CARD_THEMES[0].id;\n\nexport const FLIP_TIME = 600;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\nimport { FLIP_TIME } from \"../../constants\";\n\nexport const useStyles = makeStyles((theme) => {\n  const frontBackCommonStyles: CSSProperties = {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    WebkitBackfaceVisibility: \"hidden\",\n    backfaceVisibility: \"hidden\",\n    borderWidth: 4,\n    borderStyle: \"solid\",\n    borderRadius: theme.shape.borderRadius,\n  };\n  return {\n    root: {\n      perspective: \"1000px\",\n    },\n    card: doubleClassSpecificity({\n      position: \"relative\",\n      overflow: \"visible\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: `transform ${FLIP_TIME}ms`,\n      transformStyle: \"preserve-3d\",\n    }),\n    cardFlipped: doubleClassSpecificity({\n      transform: \"rotateY(180deg)\",\n    }),\n    \"@keyframes highlightMatched\": {\n      \"0%\": { transform: \"scale(1)\" },\n      \"50%\": { transform: \"scale(1.1)\" },\n      \"100%\": { transform: \"scale(1)\" },\n    },\n    cardMatched: doubleClassSpecificity({\n      animationName: \"$highlightMatched\",\n      animationDuration: \"0.4s\",\n    }),\n    front: {\n      ...frontBackCommonStyles,\n      borderColor: \"transparent\",\n      transition: \"border-color 0.4s\",\n    },\n    frontActive: {\n      borderColor: theme.palette.primary.main,\n    },\n    back: {\n      ...frontBackCommonStyles,\n      // \"Upholstry\" pattern, from https://leaverou.github.io/css3patterns\n      background: `\n      radial-gradient(hsl(0, 100%, 27%) 4%, hsl(0, 100%, 18%) 9%, hsla(0, 100%, 20%, 0) 9%) 0 0,\n      radial-gradient(hsl(0, 100%, 27%) 4%, hsl(0, 100%, 18%) 8%, hsla(0, 100%, 20%, 0) 10%) 20px 20px,\n      radial-gradient(hsla(0, 100%, 30%, 0.8) 20%, hsla(0, 100%, 20%, 0)) 20px 0,\n      radial-gradient(hsla(0, 100%, 30%, 0.8) 20%, hsla(0, 100%, 20%, 0)) 0 20px,\n      radial-gradient(hsla(0, 100%, 20%, 1) 35%, hsla(0, 100%, 20%, 0) 60%) 20px 0,\n      radial-gradient(hsla(0, 100%, 20%, 1) 35%, hsla(0, 100%, 20%, 0) 60%) 40px 20px,\n      radial-gradient(hsla(0, 100%, 15%, 0.7), hsla(0, 100%, 20%, 0)) 0 0,\n      radial-gradient(hsla(0, 100%, 15%, 0.7), hsla(0, 100%, 20%, 0)) 20px 20px,\n      linear-gradient(45deg, hsla(0, 100%, 20%, 0) 49%, hsla(0, 100%, 0%, 1) 50%, hsla(0, 100%, 20%, 0) 70%) 0 0,\n      linear-gradient(-45deg, hsla(0, 100%, 20%, 0) 49%, hsla(0, 100%, 0%, 1) 50%, hsla(0, 100%, 20%, 0) 70%) 0 0\n    `,\n      backgroundColor: \"#300\",\n      backgroundSize: \"40px 40px\",\n      borderColor: \"black\",\n      color: \"white\",\n      transform: \"rotateY(180deg)\",\n      \"&:hover\": {\n        borderColor: theme.palette.primary.main,\n        borderWidth: 4,\n      },\n    },\n    cardImage: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"contain\",\n    },\n  };\n});\n\n/**\n * Increasing specificity due to known Material UI issue of inconsitency of class declaration order (https://github.com/mui-org/material-ui/issues/21627)\n */\nfunction doubleClassSpecificity(cssProperties: CSSProperties): CSSProperties {\n  return {\n    \"&&\": cssProperties,\n  };\n}\n","import React, { HTMLAttributes, ImgHTMLAttributes } from \"react\";\nimport { useStyles } from \"./styles\";\nimport Card from \"@material-ui/core/Card\";\nimport classNames from \"classnames\";\n\ntype Props = HTMLAttributes<HTMLDivElement> &\n  Pick<ImgHTMLAttributes<HTMLImageElement>, \"src\" | \"alt\"> & {\n    isFaceUp?: boolean;\n    isActive?: boolean;\n    isMatched?: boolean;\n  };\n\nexport default React.memo(function ImageCard({\n  src,\n  alt,\n  className,\n  isFaceUp = true,\n  isActive = false,\n  isMatched = false,\n  ...divProps\n}: Props) {\n  const classes = useStyles();\n\n  return (\n    <div {...divProps} className={classNames(classes.root, className)}>\n      <Card\n        raised\n        className={classNames(\n          classes.card,\n          !isFaceUp && classes.cardFlipped,\n          isMatched && classes.cardMatched\n        )}\n      >\n        <div\n          className={classNames(classes.front, isActive && classes.frontActive)}\n        >\n          <img className={classes.cardImage} src={src} alt={alt} />\n        </div>\n        <div className={classes.back} />\n      </Card>\n    </div>\n  );\n});\n","import React, { useState, useCallback, useRef } from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport { GameSettings } from \"../../types\";\r\nimport { useStyles } from \"./styles\";\r\nimport ImageCard from \"../image-card/ImageCard\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {\r\n  DEFAULT_NUMBER_OF_CARDS,\r\n  MINIMUM_NUMBER_OF_CARDS,\r\n  MAXIMUM_NUMBER_OF_CARDS,\r\n  DEFAULT_CARD_THEME_ID,\r\n  CARD_THEMES,\r\n  NUMBER_OF_IMAGES_IN_CARD_THEME,\r\n} from \"../../constants\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\n\r\ninterface Props {\r\n  previousSettings?: Partial<GameSettings>;\r\n  onConfirmGameSettings: (settings: GameSettings) => void;\r\n}\r\n\r\nexport default React.memo(function Settings({\r\n  previousSettings,\r\n  onConfirmGameSettings,\r\n}: Props): JSX.Element {\r\n  const classes = useStyles();\r\n  const randomImageId = useRef(\r\n    Math.floor(Math.random() * NUMBER_OF_IMAGES_IN_CARD_THEME)\r\n  );\r\n\r\n  const [cardThemeId, setCardThemeId] = useState(\r\n    previousSettings?.cardTheme?.id ?? DEFAULT_CARD_THEME_ID\r\n  );\r\n  const [numberOfCards, setNumberOfCards] = useState(\r\n    previousSettings?.numberOfCards ?? DEFAULT_NUMBER_OF_CARDS\r\n  );\r\n\r\n  const handleThemeChange = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>, value: string) => {\r\n      setCardThemeId(value);\r\n    },\r\n    [setCardThemeId]\r\n  );\r\n  const handleNumberOfCardsChange = useCallback(\r\n    (event: React.ChangeEvent<{}>, value: number | number[]) => {\r\n      setNumberOfCards(value as number);\r\n    },\r\n    [setNumberOfCards]\r\n  );\r\n  const handleConfirmButtonClick = useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n      onConfirmGameSettings({\r\n        cardTheme: CARD_THEMES.find(({ id }) => id === cardThemeId)!,\r\n        numberOfCards,\r\n      });\r\n    },\r\n    [onConfirmGameSettings, cardThemeId, numberOfCards]\r\n  );\r\n  return (\r\n    <Card className={classes.root} component=\"form\">\r\n      <Typography variant=\"h4\" className={classes.title}>\r\n        Game setup\r\n      </Typography>\r\n\r\n      <Typography id=\"number-of-cards-slider\" className={classes.label}>\r\n        Number of cards\r\n      </Typography>\r\n      <Slider\r\n        className={classes.slider}\r\n        value={numberOfCards}\r\n        onChange={handleNumberOfCardsChange}\r\n        aria-labelledby=\"number-of-cards-slider\"\r\n        valueLabelDisplay=\"on\"\r\n        step={2}\r\n        marks\r\n        min={MINIMUM_NUMBER_OF_CARDS}\r\n        max={MAXIMUM_NUMBER_OF_CARDS}\r\n      />\r\n\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\" className={classes.label}>\r\n          Card theme\r\n        </FormLabel>\r\n        <RadioGroup\r\n          row\r\n          className={classes.radioGroup}\r\n          aria-label=\"card-theme\"\r\n          name=\"card-theme\"\r\n          value={cardThemeId}\r\n          onChange={handleThemeChange}\r\n        >\r\n          {CARD_THEMES.map((cardThemeOption) => (\r\n            <FormControlLabel //\r\n              key={cardThemeOption.id}\r\n              value={cardThemeOption.id}\r\n              control={<Radio />}\r\n              label={\r\n                <ImageCard\r\n                  className={classes.cardThemeOption}\r\n                  src={`images/${cardThemeOption.id}/${randomImageId.current}.png`}\r\n                  alt={cardThemeOption.title}\r\n                />\r\n              }\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n\r\n      <Fab\r\n        color=\"primary\"\r\n        variant=\"extended\"\r\n        className={classes.startButton}\r\n        onClick={handleConfirmButtonClick}\r\n      >\r\n        <PlayArrowIcon className={classes.extendedIcon} />\r\n        Start game\r\n      </Fab>\r\n    </Card>\r\n  );\r\n});\r\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\ninterface StyleProps {\n  numberOfCards: number;\n}\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxWidth: 980,\n    width: `calc(100vw - ${theme.spacing(4)}px)`,\n    padding: theme.spacing(2.5),\n    [theme.breakpoints.up(\"lg\")]: {\n      width: `calc(100vw - ${theme.spacing(8)}px)`,\n    },\n  },\n  gameCards: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    marginLeft: -theme.spacing(1),\n    marginRight: -theme.spacing(1),\n  },\n  imageCard: ({ numberOfCards }: StyleProps) => ({\n    margin: theme.spacing(1),\n    width: numberOfCards < 20 ? 70 : 50,\n    height: numberOfCards < 20 ? 70 : 50,\n    [theme.breakpoints.up(\"lg\")]: {\n      width: numberOfCards < 20 ? 140 : 100,\n      height: numberOfCards < 20 ? 140 : 100,\n    },\n  }),\n  gameInfo: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  hideCardsCountdown: {\n    opacity: 1,\n    transition: \"opacity 1s\",\n  },\n  hideCardsCountdownFinished: {\n    opacity: 0,\n  },\n  progress: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(1),\n  },\n}));\n","export function generateNumericArray(length: number): number[] {\n  return Array.from({ length }, (_, k) => k);\n}\n\nexport function shuffleArray<T>(array: T[]): T[] {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport Fab from \"@material-ui/core/Fab\";\n\ninterface Props {\n  numberOfCards: number;\n  numberOfMisses: number;\n  onConfirm: () => void;\n}\n\nexport default React.memo(function GameCompleteDialog({\n  numberOfCards,\n  numberOfMisses,\n  onConfirm,\n}: Props): JSX.Element {\n  return (\n    <Dialog\n      open\n      disableBackdropClick={true}\n      aria-labelledby=\"alert-dialog-title\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Congratulations</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          You matched {numberOfCards} cards with{\" \"}\n          {numberOfMisses === 0\n            ? \"no misses\"\n            : numberOfMisses === 1\n            ? \"only one miss\"\n            : `${numberOfMisses} misses`}\n          !\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={onConfirm}>\n          <CheckIcon />\n        </Fab>\n      </DialogActions>\n    </Dialog>\n  );\n});\n","import React, { useState, useMemo } from \"react\";\r\nimport { GameSettings, GameCardStatus } from \"../../types\";\r\nimport ImageCard from \"../image-card/ImageCard\";\r\nimport { useStyles } from \"./styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Subject, concat, interval, timer } from \"rxjs\";\r\nimport { take, delay, map, share, ignoreElements } from \"rxjs/operators\";\r\nimport {\r\n  useSubscription,\r\n  useObservable,\r\n  useObservableState,\r\n} from \"observable-hooks\";\r\nimport { generateNumericArray, shuffleArray } from \"../../helpers\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { FLIP_TIME, NUMBER_OF_IMAGES_IN_CARD_THEME } from \"../../constants\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GameCompleteDialog from \"../game-complete-dialog/GameCompleteDialog\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface Props {\r\n  gameSettings: GameSettings;\r\n  onEndGame: () => void;\r\n}\r\n\r\nconst ALL_CARDS_VISIBLE_DURATION_SEC = 3;\r\n\r\nexport default React.memo(function GameBoard({\r\n  gameSettings,\r\n  onEndGame,\r\n}: Props): JSX.Element {\r\n  const { numberOfCards, cardTheme } = gameSettings;\r\n  const classes = useStyles({ numberOfCards });\r\n  const [gameCards, setGameCards] = useState(() =>\r\n    initializeGameCards(numberOfCards)\r\n  ); // Note: Using \"lazy initial state\" to avoid repeating randomizing logic on each render\r\n  const [isFlipAllowed, setIsFlipAllowed] = useState(false);\r\n  const [numberOfMisses, setNumberOfMisses] = useState(0);\r\n\r\n  // Hide cards after timeout, staggered in a randomized order\r\n  const randomizedHideOrder = useMemo(\r\n    () => shuffleArray(generateNumericArray(numberOfCards)),\r\n    [numberOfCards] // numberOfCards does not change so this will not re-calculate\r\n  );\r\n  const countDown$ = useObservable(() =>\r\n    interval(1000).pipe(\r\n      take(ALL_CARDS_VISIBLE_DURATION_SEC),\r\n      map(\r\n        (intervalIndex) => ALL_CARDS_VISIBLE_DURATION_SEC - intervalIndex - 1\r\n      ),\r\n      share()\r\n    )\r\n  );\r\n  const secondsUntilHideCards = useObservableState(\r\n    countDown$,\r\n    ALL_CARDS_VISIBLE_DURATION_SEC\r\n  );\r\n  const hideAllCards$ = useObservable(() =>\r\n    concat(\r\n      // Start hiding cards after the countdown finishes\r\n      countDown$.pipe(ignoreElements()),\r\n      timer(0, 50).pipe(take(numberOfCards))\r\n    )\r\n  );\r\n  useSubscription(\r\n    hideAllCards$,\r\n    (intervalIndex) => {\r\n      const indexToFlip = randomizedHideOrder[intervalIndex];\r\n      setGameCards((cards) =>\r\n        cards.map((card, index) =>\r\n          index === indexToFlip ? { ...card, isFaceUp: false } : card\r\n        )\r\n      );\r\n    },\r\n    null,\r\n    () => setIsFlipAllowed(true)\r\n  );\r\n\r\n  // Display match result after short delay (e.g. so we don't turn cards back face down before the user has a chance to see that they don't match).\r\n  const notifyMatchResult$ = useMemo(\r\n    () => new Subject<{ isMatch: boolean; indices: [number, number] }>(),\r\n    []\r\n  );\r\n  const notifyMatchResultDelayed$ = useObservable(() =>\r\n    notifyMatchResult$.pipe(delay(FLIP_TIME))\r\n  );\r\n  useSubscription(notifyMatchResultDelayed$, ({ isMatch, indices }) => {\r\n    setIsFlipAllowed(true);\r\n    if (isMatch) {\r\n      // Set two cards as matched\r\n      setGameCards((cards) =>\r\n        cards.map((card, cardIndex) =>\r\n          indices.includes(cardIndex)\r\n            ? { ...card, isMatched: true, isActive: false }\r\n            : card\r\n        )\r\n      );\r\n    } else {\r\n      // Set face down\r\n      setGameCards((cards) =>\r\n        cards.map((card, cardIndex) =>\r\n          indices.includes(cardIndex)\r\n            ? { ...card, isFaceUp: false, isActive: false }\r\n            : card\r\n        )\r\n      );\r\n      setNumberOfMisses((misses) => misses + 1);\r\n    }\r\n  });\r\n\r\n  const handleGameCardClick = (clickedCardIndex: number) => {\r\n    const clickedCard = gameCards[clickedCardIndex];\r\n    if (!isFlipAllowed || clickedCard.isFaceUp) {\r\n      return;\r\n    }\r\n    setGameCards(\r\n      gameCards.map((card, index) =>\r\n        clickedCardIndex === index\r\n          ? { ...card, isFaceUp: true, isActive: true }\r\n          : card\r\n      )\r\n    );\r\n    const unmatchedFaceUpCard = gameCards.find(\r\n      ({ isFaceUp, isMatched }) => isFaceUp && !isMatched\r\n    );\r\n    if (unmatchedFaceUpCard) {\r\n      const isMatch = clickedCard.imageId === unmatchedFaceUpCard.imageId;\r\n      notifyMatchResult$.next({\r\n        isMatch,\r\n        indices: [clickedCardIndex, unmatchedFaceUpCard.displayIndex],\r\n      });\r\n      setIsFlipAllowed(false); // Disable flipping of next card until result of this flip has been notified\r\n    }\r\n  };\r\n\r\n  const percentageProgress =\r\n    (gameCards.filter(({ isMatched }) => isMatched).length / numberOfCards) *\r\n    100;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.gameInfo}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          endIcon={<CancelPresentationIcon />}\r\n          onClick={onEndGame}\r\n        >\r\n          End game\r\n        </Button>\r\n        {numberOfMisses > 0 ? (\r\n          <Typography data-testid=\"misses\">Misses: {numberOfMisses}</Typography>\r\n        ) : (\r\n          <Typography\r\n            className={classNames(\r\n              classes.hideCardsCountdown,\r\n              secondsUntilHideCards === 0 && classes.hideCardsCountdownFinished\r\n            )}\r\n          >\r\n            Flipping in {secondsUntilHideCards}...\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.gameCards}>\r\n        {gameCards.map((gameCard, cardIndex) => (\r\n          <ImageCard\r\n            key={cardIndex}\r\n            className={classes.imageCard}\r\n            src={`images/${cardTheme.id}/${gameCard.imageId}.png`}\r\n            alt=\"Card\"\r\n            isFaceUp={gameCard.isFaceUp}\r\n            isMatched={gameCard.isMatched}\r\n            isActive={gameCard.isActive}\r\n            onClick={() => handleGameCardClick(cardIndex)} // TODO: // Use memoized handler\r\n            data-testid={\r\n              isFlipAllowed && `testable-card-${cardIndex}-${gameCard.imageId}`\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n      <LinearProgress\r\n        className={classes.progress}\r\n        variant=\"determinate\"\r\n        value={percentageProgress}\r\n        data-testid={`progressbar-${percentageProgress}`}\r\n      />\r\n      {percentageProgress === 100 && (\r\n        <GameCompleteDialog\r\n          numberOfCards={numberOfCards}\r\n          numberOfMisses={numberOfMisses}\r\n          onConfirm={onEndGame}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n});\r\n\r\nfunction initializeGameCards(numberOfCards: number): GameCardStatus[] {\r\n  // Randomly pick which card images will be shown\r\n  const imageIndices = shuffleArray(\r\n    generateNumericArray(NUMBER_OF_IMAGES_IN_CARD_THEME)\r\n  ).slice(0, numberOfCards / 2);\r\n  // Shuffle two sets of the images to into their display order\r\n  return shuffleArray([...imageIndices, ...imageIndices]).map(\r\n    (imageId, displayIndex) => ({\r\n      displayIndex,\r\n      imageId,\r\n      isFaceUp: true,\r\n      isMatched: false,\r\n      isActive: false,\r\n    })\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"grid\",\n    placeItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: theme.palette.background.default,\n  },\n}));\n","import React, { useState, useCallback } from \"react\";\r\nimport GameSetup from \"./components/game-setup/GameSetup\";\r\nimport { GameSettings } from \"./types\";\r\nimport GameBoard from \"./components/game-board/GameBoard\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction Game(): JSX.Element {\r\n  const classes = useStyles();\r\n  const [gameSettings, setGameSettings] = useState<GameSettings | undefined>(\r\n    undefined\r\n  );\r\n  const [isGameActive, setIsGameActive] = useState(false);\r\n\r\n  const handleStartGame = useCallback((settings: GameSettings) => {\r\n    setGameSettings(settings);\r\n    setIsGameActive(true);\r\n  }, []);\r\n  const handleEndGame = useCallback(() => setIsGameActive(false), []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {isGameActive ? (\r\n        <GameBoard gameSettings={gameSettings!} onEndGame={handleEndGame} />\r\n      ) : (\r\n        <GameSetup\r\n          onConfirmGameSettings={handleStartGame}\r\n          previousSettings={gameSettings}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport {\n  StylesProvider,\n  createGenerateClassName,\n} from \"@material-ui/core/styles\";\nimport Game from \"./Game\";\n\nconst generateClassName = createGenerateClassName({\n  productionPrefix: \"mm\",\n});\n\nfunction App(): JSX.Element {\n  return (\n    <StylesProvider generateClassName={generateClassName}>\n      <Game />\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}